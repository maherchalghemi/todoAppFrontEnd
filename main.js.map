{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.css","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/todo.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/todo/header/header.component.css","webpack:///./src/app/todo/header/header.component.html","webpack:///./src/app/todo/header/header.component.ts","webpack:///./src/app/todo/home/home.component.css","webpack:///./src/app/todo/home/home.component.html","webpack:///./src/app/todo/home/home.component.ts","webpack:///./src/app/todo/list/list.component.css","webpack:///./src/app/todo/list/list.component.html","webpack:///./src/app/todo/list/list.component.ts","webpack:///./src/app/todo/profile/profile.component.css","webpack:///./src/app/todo/profile/profile.component.html","webpack:///./src/app/todo/profile/profile.component.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { HeaderComponent } from './todo/header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HomeComponent } from './todo/home/home.component';\nimport { AuthGuard } from './auth.guard';\nimport { ListComponent } from './todo/list/list.component';\nimport { ProfileComponent } from './todo/profile/profile.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { AuthComponent } from './auth/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'todo',\n    pathMatch: 'full'\n  },\n  {\n    path: 'todo',\n    component: TodoComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'home'\n      },\n      {\n        path: 'home',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'list',\n        component: ListComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n        canActivate: [AuthGuard]\n      }\n    ]\n  },\n  {\n    path: 'auth',\n    component: AuthComponent,\n    children: [\n      {\n        path:'',\n        pathMatch:'full',\n        redirectTo:'login'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      }\n        \n    ]\n    \n  }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    ListComponent,\n    ProfileComponent,\n    TodoComponent,\n    AuthComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes),\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tokenKey } from '@angular/core/src/view';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n      if (! localStorage.getItem('token')){\n        // this.router.navigate(['home']);\n        this.router.navigate(['auth']);\n\n        return false;\n      }\n\n    return true;\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".bg{\\r\\n    background:url('http://www.wallpaperup.com/uploads/wallpapers/2012/10/21/20181/cad2441dd3252cf53f12154412286ba0.jpg');\\r\\n    padding:200px;\\r\\n    margin-top: 0%;\\r\\n    \\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"bg\\\">\\n    \\n    \\n<div id=\\\"loginbox\\\"  class=\\\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\">\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"show == true\\\">\\n        {{mesg}}\\n      </div>\\n    <div class=\\\"panel panel-info\\\">\\n  \\n      <div class=\\\"panel-heading\\\">\\n        <div class=\\\"panel-title\\\">\\n          <h2>Sign In</h2>\\n        </div>\\n  \\n      </div>\\n  \\n      <div style=\\\"padding-top:30px\\\" class=\\\"panel-body\\\">\\n  \\n        <div style=\\\"display:none\\\" id=\\\"login-alert\\\" class=\\\"alert alert-danger col-sm-12\\\"></div>\\n  \\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginBtn(loginForm)\\\" id=\\\"loginform\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n  \\n          <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">\\n              <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n            </span>\\n            <input formControlName=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"\\\" placeholder=\\\"email\\\">\\n            <span *ngIf=\\\"this.loginForm.controls['email'].invalid\\\"> wrong email </span>\\n          </div>\\n  \\n          <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">\\n              <i class=\\\"glyphicon glyphicon-lock\\\"></i>\\n            </span>\\n            <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"password\\\">\\n          </div>\\n  \\n  \\n  \\n  \\n          <div style=\\\"margin-top:10px\\\" class=\\\"form-group\\\">\\n            <!-- Button -->\\n  \\n            <div class=\\\"col-sm-12 controls\\\">\\n              <button [disabled]=\\\"loginForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Login </button>\\n             \\n              <a routerLink=\\\"/auth/register\\\" >Sign up</a>\\n            </div>\\n          </div>\\n  \\n  \\n  \\n        </form>\\n  \\n  \\n  \\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { User } from '../../Models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  user : User;\n  mesg : string ;\n  show :Boolean = false ;\n  constructor(private authService : AuthService , private router: Router) {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required)\n    })\n    \n  }\n\n  ngOnInit() {\n  }\n\n\n \n  loginBtn(form) {\n    this.mesg='';\n    console.log(form.valid)\n    console.log(form);\n\n    this.authService.login(form.value).subscribe(res => {\n      // localStorage.setItem('token', res.json().userToken);\n\n     \n      \n\n      console.log(res.json()) ;\n      this.router.navigate(['todo']);\n\n\n    },\n    err => {\n      console.log(err);\n      if (err.status== 403){\n        this.show = true ;\n        this.mesg = \"Utilisateur introuvale , veuillez vérifier votre email\" ;\n        console.log(this.mesg);\n      }\n      if (err.status== 402){\n        this.show = true ;\n        this.mesg = \"Votre Mot de Passe est incorrect\" ;\n        console.log(this.mesg);\n      }\n\n    }\n  \n  );\n\n   \n  }\n}\n","module.exports = \"\"","module.exports = \"<div id=\\\"loginbox\\\" style=\\\"margin-top:50px;\\\" class=\\\"mainbox col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\\\">\\n  <div class=\\\"panel panel-info\\\">\\n\\n    <div class=\\\"panel-heading\\\">\\n      <div class=\\\"panel-title\\\">\\n        <h2>Sign up</h2>\\n      </div>\\n\\n    </div>\\n\\n    <div style=\\\"padding-top:30px\\\" class=\\\"panel-body\\\">\\n\\n      <div style=\\\"display:none\\\" id=\\\"login-alert\\\" class=\\\"alert alert-danger col-sm-12\\\"></div>\\n\\n   \\n      <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerBtn(registerForm)\\\"  class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n\\n        <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n          </span>\\n          <input formControlName=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"\\\" placeholder=\\\"Name\\\">\\n         \\n        </div>\\n\\n\\n        <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n          </span>\\n          <input formControlName=\\\"lastname\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"\\\" placeholder=\\\"Last Name\\\">\\n         \\n        </div>\\n\\n\\n\\n\\n        <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n          </span>\\n          <input formControlName=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"\\\" placeholder=\\\"email\\\">\\n          <span *ngIf=\\\"this.registerForm.controls['email'].invalid\\\"> wrong email </span>\\n        </div>\\n\\n        <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"glyphicon glyphicon-lock\\\"></i>\\n          </span>\\n          <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"password\\\">\\n        </div>\\n\\n\\n\\n\\n        <div style=\\\"margin-top:10px\\\" class=\\\"form-group\\\">\\n          <!-- Button -->\\n\\n          <div class=\\\"col-sm-12 controls\\\">\\n            <button [disabled]=\\\"registerForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Register </button>\\n\\n\\n          </div>\\n        </div>\\n\\n\\n\\n      </form>\\n\\n\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router) {\n    this.registerForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required)\n    })\n\n  }\n\n  ngOnInit() {\n  }\n  registerBtn(form) {\n    console.log(form.valid)\n    console.log(form);\n    // call to yr service \n\n    this.authService.register(form.value).subscribe(res => {\n      console.log(res.json());\n      // localStorage.setItem('token', res.json().token);\n      this.router.navigate(['todo']);\n    });\n\n   \n  }\n}\n","module.exports = \"\"","module.exports = \"<footer class=\\\"py-5 bg-dark\\\">\\n  <div class=\\\"container\\\">\\n    <p class=\\\"m-0 text-center text-white\\\">Copyright &copy; Your Website 2018</p>\\n  </div>\\n  <!-- /.container -->\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { User } from \"../../Models/user\";\nimport { Token } from '@angular/compiler';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: Http) { }\n \n\n\n  login(user: User) {\n\n\n    return this.http.post('http://localhost:3000/auth/login', user).pipe(map(res => {\n      // if (res.sta\n      // return this.mesg = \"Utilisateur introuvale , veillez vérifier votre email\" ;\n      // if (res.json().message == 'password invalid')\n      // return this.mesg = \"Votre mot de passe est incorecte\" ;\n\n      \n    \n      localStorage.setItem('id', res.json().user._id);  \n    localStorage.setItem('token', res.json().userToken);\n      \n      return res;\n    }));\n\n\n  }\n\n  register(user: User) {\n\n    // return this.http.post('http://localhost:3000/auth/register', user);\n    return this.http.post('http://localhost:3000/auth/register', user).pipe(map(res => {\n      localStorage.setItem('token', res.json().userToken );\n      localStorage.setItem('id', res.json().user._id);\n      return res;\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { User } from '../../Models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  constructor(private http :Http) { }\n\n  addTodo (user : User , id : string) {\n\n    return this.http.post('http://localhost:3000/todo/insert/'+id, user);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { User } from '../../Models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: Http) { }\n\n  getUserById (id :string) {\n    return this.http.get('http://localhost:3000/user/user/'+id);\n  }\n\n  getUsers () {\n    return this.http.get('http://localhost:3000/user/all');\n  }\n\n  update (id : string,user : User ) {\n\n    return this.http.post('http://localhost:3000/user/update/'+id , user) ;\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\n       \\n        \\n\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/todo/list\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">List</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/todo/profile\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">My profile</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"logout()\\\">Logout</a>\\n          </li>\\n\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  logout() {\n    localStorage.setItem('token','');\n    localStorage.setItem('id','');\n    this.router.navigate(['auth']);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>welcome {{fullName}}</h1>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../Models/user';\nimport { UserService } from '../../shared/services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nfullName : string ='';\n\n  constructor(private userService : UserService) { }\ngetName() {\n  var id = localStorage.getItem('id');\n this.userService.getUserById(id).subscribe(res => {\n  \n  console.log(res.json()) ;\n  this.fullName = res.json().name+' '+res.json().lastname;\n});\n\n}\n  ngOnInit() {\n\nthis.getName()\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">Name</th>\\n      <th scope=\\\"col\\\">Last Name</th>\\n      <th scope=\\\"col\\\">Email</th>\\n      <th scope=\\\"col\\\"></th>\\n    </tr>\\n  </thead>\\n  <tbody *ngFor=\\\"let user of users;\\\">\\n    <tr>\\n      <th scope=\\\"row\\\">{{user.name}}</th>\\n      <td>{{user.lastname}} {{user._id}}</td>\\n      <td>{{user.email}}</td>\\n      <td>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-info\\\" (click)=\\\"openModal(user._id)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n          info\\n        </button>\\n      </td>\\n\\n    </tr>\\n\\n  </tbody>\\n</table>\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Todo List</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <table class=\\\"table\\\">\\n          \\n          <tbody *ngFor=\\\"let todo of todos;\\\">\\n            <tr>\\n              <th scope=\\\"row\\\">{{todo.description}}</th>\\n              <td> {{ todo.date | date}}</td>\\n              <td>{{todo.done}}</td>\\n            \\n            </tr>\\n        \\n          </tbody>\\n        </table>\\n\\t\\t\\n\\t\\t\\n\\t\\t\\n\\t\\n\\t\\t<div  *ngIf=\\\"show == true\\\">\\n        <form [formGroup]=\\\"todoForm\\\" (ngSubmit)=\\\"todoAddBtn(todoForm)\\\"  class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n\\n        <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n          </span>\\n         \\n          <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Description\\\" rows=\\\"2\\\"></textarea>\\n        </div>\\n\\n\\n        <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n          <span class=\\\"input-group-addon\\\">\\n            <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n          </span>\\n          <input formControlName=\\\"date\\\" type=\\\"date\\\" class=\\\"form-control\\\" >\\n         \\n        </div>\\n\\n\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\\\" formControlName=\\\"done\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"defaultCheck1\\\">\\n            Done\\n          </label>\\n        </div>\\n\\n\\n\\n\\n        <div style=\\\"margin-top:10px\\\" class=\\\"form-group\\\">\\n        \\n\\n          <div class=\\\"col-sm-12 controls\\\">\\n            <button [disabled]=\\\"todoForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save </button>\\n\\n\\n          </div>\\n        </div>\\n\\n\\n\\n      </form>\\n\\n    </div>  \\n  \\n\\n\\n</div>\\n<div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)='close()'>Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='displayform()'>Add</button>\\n      </div>\\n\\n\\n    \\n  </div>\\n  </div>\\n    </div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { TodoService } from '../../shared/services/todo.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\nusers = []; \ntodos = [];\nid_user : string ='';\nshow : Boolean = false ;\ntodoForm : FormGroup;\n  constructor(private userService : UserService , private todoService : TodoService) {\n    // this.registerForm = new FormGroup({\n    //   name: new FormControl('', Validators.required),\n    //   lastName: new FormControl('', Validators.required),\n    //   email: new FormControl('', Validators.email),\n    //   password: new FormControl('', Validators.required)\n    // })\n\n    this.todoForm = new FormGroup ({\n      description: new FormControl('', Validators.required),\n      date: new FormControl('', Validators.required),\n      done: new FormControl('', Validators.required)\n    })\n   }\n  getUsers() {\n    this.userService.getUsers().subscribe(res => {\n      console.log(res.json());\n      this.users = res.json();\n    });\n  }\n\n\n\n  todoAddBtn(form) {\n    \n    \nthis.todoService.addTodo(form.value,this.id_user).subscribe(res => {\n    console.log(res.json());\n  \n  });\n  \n  }\n\n  displayform() {\n    this.show = true;\n  }\n\n  close() {\n    this.show = false;\n    this.id_user = '' ;\n  }\n\n  openModal(id : string) {\n    this.id_user = id;\nthis.userService.getUserById(id).subscribe(res => {\n  console.log(res.json().todos);\n  this.todos = res.json().todos;\n});\n  }\n \n\n  ngOnInit() {\n    this.getUsers();\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">My Profile</h5>\\n    <p class=\\\"card-text\\\">{{myname}}</p>\\n    <p class=\\\"card-text\\\">{{mylastName}}</p>\\n    <p class=\\\"card-text\\\">{{myemail}}</p>\\n\\n    <a routerLink=\\\"/todo/list\\\" class=\\\"btn btn-primary\\\">back to list</a> \\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n      Update\\n    </button>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\" >\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Update My Profile</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <form class=\\\"form-horizontal\\\" [formGroup]=\\\"updateProfileForm\\\" (ngSubmit)=\\\"updateMyProfileBtn(updateProfileForm)\\\" role=\\\"form\\\">\\n          \\n          <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">\\n              <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n            </span>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n\\n          </div>\\n\\n\\n          <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">\\n              <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n            </span>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastname\\\">\\n\\n          </div>\\n\\n\\n\\n\\n          <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">\\n              <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n            </span>\\n            <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n            <span *ngIf=\\\"this.updateProfileForm.controls['email'].invalid\\\"> wrong email </span>\\n          </div>\\n\\n          <div style=\\\"margin-bottom: 25px\\\" class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\">\\n              <i class=\\\"glyphicon glyphicon-lock\\\"></i>\\n            </span>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\n          </div>\\n\\n          \\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            <button type=\\\"submit\\\" [disabled]=\\\"updateProfileForm.invalid\\\" class=\\\"btn btn-primary\\\" (click)= \\\"closeModal()\\\">save changes</button>\\n          </div>\\n        </form>\\n\\n\\n\\n\\n\\n      </div>\\n\\n\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  @ViewChild('exampleModal') modalUpdate : ElementRef\n  myname: string = '';\n  mylastName: string = '';\n  myemail: string = '';\n  mypassword: string = '';\n  updateProfileForm: FormGroup;\n\n  constructor(private userService: UserService) {\n    this.updateProfileForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n\n\n  updateMyProfileBtn(form) {\n    console.log('sqdqsd');\n    var id = localStorage.getItem('id');\n    this.userService.update(id, form.value).subscribe(res => {\n      console.log(res.json());\n      this.getMyProfile();\n      \n    });\n\n  }\n\n  getMyProfile() {\n    var id = localStorage.getItem('id');\n    this.userService.getUserById(id).subscribe(res => {\n\n      console.log(res.json());\n      this.myname = res.json().name;\n      this.mylastName = res.json().lastname;\n      this.myemail = res.json().email;\n      this.mypassword = res.json().password;\n      // this.updateProfileForm.setValue(res.json());\n      this.updateProfileForm.controls['name'].setValue(res.json().name);\n      this.updateProfileForm.controls['lastname'].setValue(res.json().lastname);\n      this.updateProfileForm.controls['email'].setValue(res.json().email);\n      this.updateProfileForm.controls['password'].setValue(res.json().password);\n    });\n\n  }\n\n  // closeModal() {\n  //   this.modalUpdate.nativeElement.hide();\n  // }\n  ngOnInit() {\n    this.getMyProfile();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n\\n  <router-outlet></router-outlet>\\n\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}